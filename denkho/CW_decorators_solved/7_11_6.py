# Объявите функцию translate, которая принимает строку на кириллице и преобразовывает ее в латиницу,
# используя следующий словарь для замены русских букв на соответствующее латинское написание:
#
# t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
#      'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
#      'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
#      'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
# Функция должна возвращать преобразованную строку.
# Замены делать без учета регистра (исходную строку перевести в нижний регистр - малые буквы).
# Все небуквенные символы ": ;.,_" превращать в символ '-' (дефиса).
#
# Определите декоратор compact для этой функции, который несколько подряд идущих дефисов,
# превращает в один дефис. Полученная строка должна возвращаться при вызове декоратора.
# (Сам декоратор на экран ничего выводить не должен).
#
# Примените декоратор к функции translate:
#
# Sample Input:
#
# Python - это круто!
# Sample Output:
#
# python-eto-kruto!

# ===================== ваш код =====================

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya', ":": "-", " ": "-", 
     ";": "-", ".": "-", ",": "-", "_": "-"}

# здесь продолжайте программу

def compact(func):
     def wrapper(*arr):
          s = func(*arr)
          s = list(s)
          res = []
          for i, v in enumerate(s):
               if (i == 0) or not (s[i - 1] == '-' and v == '-'):
                    res.append(v)
          return ''.join(res)
     return wrapper

@compact
def translate(cyrillic):
    latin = ''
    for letter in cyrillic:
         if letter in t:
              latin += t[letter]
         else:
              latin += letter
    return latin.lower()
         
              


# ===================== проверка =====================
# assert compact, "декоратор не найден"
str_1 = "Python - это круто!"
s = translate(str_1)
print(s)
assert s == "python-eto-kruto!", f"функция translate вернула неожиданный результат {s}"
print(s)