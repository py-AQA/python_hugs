# Объявите функцию , которая возвращает переданную ей строку в нижнем регистре (с малыми буквами).
# Определите декоратор dec_with_parm для этой функции, который имеет один параметр tag,
# определяющий строку с названием тега и начальным значением "h1".
# Этот декоратор должен заключать возвращенную функцией строку в тег tag и возвращать результат.
#
# Пример заключения строки "python" в тег h1: <h1>python</h1>
#
# Примените декоратор со значением tag="div" к функции и вызовите декорированную функцию для введенной строки s:
#
# Sample Input:
#
# Декораторы - это классно!
# Sample Output:
#
# <div>декораторы - это классно!</div>
# ===================== ваш код =====================


def dec_with_parm(tag):
    def decorator(func):
        def wrapper(*args):
            return f'<{tag}>{func(*args)}</{tag}>'
        return wrapper
    return decorator

@dec_with_parm('div')
def function_low(s: str) -> str:
    return s.lower()


# ===================== проверка =====================
assert dec_with_parm, "декоратор не найден"
str_1 = "Декораторы - это классно!"
res = function_low(str_1)
assert res == "<div>декораторы - это классно!</div>", "функция function_low вернула неожиданный результат"
print(res)
