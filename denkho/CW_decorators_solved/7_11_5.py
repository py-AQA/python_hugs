# Вводятся две строки из слов (слова записаны через пробел). Объявите функцию, которая
# преобразовывает эти две строки в два списка слов и возвращает эти списки.
#
# Определите декоратор для этой функции, который из двух списков формирует словарь,
# в котором ключами являются слова из первого списка, а значениями - соответствующие элементы из второго списка.
# Полученный словарь должен возвращаться при вызове декоратора.
#
# Примените декоратор к первой функции.
#
# Sample Input:
#
# house river tree car
# дом река дерево машина
#
# Sample Output:
#
# ('car', 'машина') ('house', 'дом') ('river', 'река') ('tree', 'дерево')
# ===================== ваш код =====================


def lst2dict(func):
    def wrapper(*args):
        a, b = func(*args)
        res = dict(zip(a, b))
        return res
    return wrapper

@lst2dict
def str2lst(one: str, two: str) -> tuple:
    return one.split(), two.split()


# ===================== проверка =====================
assert lst2dict, "декоратор не найден"
str_1 = "house river tree car"
str_2 = "дом река дерево машина"
d = sorted(str2lst(str_1, str_2).items())
assert d == [('car', 'машина'), ('house', 'дом'), ('river', 'река'), ('tree', 'дерево')], "функция str2lst вернула неожиданный результат"
print(*d)
